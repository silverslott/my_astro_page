{
  "version": 3,
  "sources": ["../../@astrojs/vue/client.js", "../../@astrojs/vue/static-html.js"],
  "sourcesContent": ["import { h, createSSRApp, createApp, Suspense } from 'vue';\nimport { setup } from 'virtual:@astrojs/vue/app';\nimport StaticHtml from './static-html.js';\n\nexport default (element) =>\n\tasync (Component, props, slotted, { client }) => {\n\t\tdelete props['class'];\n\t\tif (!element.hasAttribute('ssr')) return;\n\n\t\t// Expose name on host component for Vue devtools\n\t\tconst name = Component.name ? `${Component.name} Host` : undefined;\n\t\tconst slots = {};\n\t\tfor (const [key, value] of Object.entries(slotted)) {\n\t\t\tslots[key] = () => h(StaticHtml, { value, name: key === 'default' ? undefined : key });\n\t\t}\n\n\t\tlet content = h(Component, props, slots);\n\t\t// related to https://github.com/withastro/astro/issues/6549\n\t\t// if the component is async, wrap it in a Suspense component\n\t\tif (isAsync(Component.setup)) {\n\t\t\tcontent = h(Suspense, null, content);\n\t\t}\n\n\t\tif (client === 'only') {\n\t\t\tconst app = createApp({ name, render: () => content });\n\t\t\tawait setup(app);\n\t\t\tapp.mount(element, false);\n\t\t} else {\n\t\t\tconst app = createSSRApp({ name, render: () => content });\n\t\t\tawait setup(app);\n\t\t\tapp.mount(element, true);\n\t\t}\n\t};\n\nfunction isAsync(fn) {\n\tconst constructor = fn?.constructor;\n\treturn constructor && constructor.name === 'AsyncFunction';\n}\n", "import { h, defineComponent } from 'vue';\n\n/**\n * Astro passes `children` as a string of HTML, so we need\n * a wrapper `div` to render that content as VNodes.\n *\n * This is the Vue + JSX equivalent of using `<div v-html=\"value\" />`\n */\nconst StaticHtml = defineComponent({\n\tprops: {\n\t\tvalue: String,\n\t\tname: String,\n\t\thydrate: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t},\n\tsetup({ name, value, hydrate }) {\n\t\tif (!value) return () => null;\n\t\tlet tagName = hydrate ? 'astro-slot' : 'astro-static-slot';\n\t\treturn () => h(tagName, { name, innerHTML: value });\n\t},\n});\n\n/**\n * Other frameworks have `shouldComponentUpdate` in order to signal\n * that this subtree is entirely static and will not be updated\n *\n * Fortunately, Vue is smart enough to figure that out without any\n * help from us, so this just works out of the box!\n */\n\nexport default StaticHtml;\n"],
  "mappings": ";;;;;;;;;;AACA,SAAS,aAAa;;;ACOtB,IAAM,aAAa,gBAAgB;AAAA,EAClC,OAAO;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,SAAS;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,IACV;AAAA,EACD;AAAA,EACA,MAAM,EAAE,MAAM,OAAO,QAAQ,GAAG;AAC/B,QAAI,CAAC;AAAO,aAAO,MAAM;AACzB,QAAI,UAAU,UAAU,eAAe;AACvC,WAAO,MAAM,EAAE,SAAS,EAAE,MAAM,WAAW,MAAM,CAAC;AAAA,EACnD;AACD,CAAC;AAUD,IAAO,sBAAQ;;;AD5Bf,IAAO,iBAAQ,CAAC,YACf,OAAO,WAAW,OAAO,SAAS,EAAE,OAAO,MAAM;AAChD,SAAO,MAAM,OAAO;AACpB,MAAI,CAAC,QAAQ,aAAa,KAAK;AAAG;AAGlC,QAAM,OAAO,UAAU,OAAO,GAAG,UAAU,IAAI,UAAU;AACzD,QAAM,QAAQ,CAAC;AACf,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,OAAO,GAAG;AACnD,UAAM,GAAG,IAAI,MAAM,EAAE,qBAAY,EAAE,OAAO,MAAM,QAAQ,YAAY,SAAY,IAAI,CAAC;AAAA,EACtF;AAEA,MAAI,UAAU,EAAE,WAAW,OAAO,KAAK;AAGvC,MAAI,QAAQ,UAAU,KAAK,GAAG;AAC7B,cAAU,EAAE,UAAU,MAAM,OAAO;AAAA,EACpC;AAEA,MAAI,WAAW,QAAQ;AACtB,UAAM,MAAM,UAAU,EAAE,MAAM,QAAQ,MAAM,QAAQ,CAAC;AACrD,UAAM,MAAM,GAAG;AACf,QAAI,MAAM,SAAS,KAAK;AAAA,EACzB,OAAO;AACN,UAAM,MAAM,aAAa,EAAE,MAAM,QAAQ,MAAM,QAAQ,CAAC;AACxD,UAAM,MAAM,GAAG;AACf,QAAI,MAAM,SAAS,IAAI;AAAA,EACxB;AACD;AAED,SAAS,QAAQ,IAAI;AACpB,QAAM,cAAc,yBAAI;AACxB,SAAO,eAAe,YAAY,SAAS;AAC5C;",
  "names": []
}
